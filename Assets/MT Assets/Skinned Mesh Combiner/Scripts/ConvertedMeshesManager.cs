#if UNITY_EDITOR
using UnityEditor;
#endif
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace MTAssets.SkinnedMeshCombiner
{
    /*
     *  This class is responsible for the functioning of the "Converted Meshes Manager" component, and all its functions.
     */
    /*
     * The Skinned Mesh Combiner was developed by Marcos Tomaz in 2019.
     * Need help? Contact me (mtassets@windsoft.xyz)
     */

    [AddComponentMenu("")] //Hide this script in component menu.
    public class ConvertedMeshesManager : MonoBehaviour
    {
        //Variables of this management
        ///<summary>[WARNING] Do not change the value of this variable. This is a variable used for internal tool operations.</summary> 
        [HideInInspector]
        public GameObject converterOriginalGameObject;

#if UNITY_EDITOR
        //Public variables of Interface
        private bool gizmosOfThisComponentIsDisabled = false;

        //The UI of this component
        #region INTERFACE_CODE
        [UnityEditor.CustomEditor(typeof(ConvertedMeshesManager))]
        public class CustomInspector : UnityEditor.Editor
        {
            public override void OnInspectorGUI()
            {
                //Start the undo event support, draw default inspector and monitor of changes
                ConvertedMeshesManager script = (ConvertedMeshesManager)target;
                script.gizmosOfThisComponentIsDisabled = MTAssetsEditorUi.DisableGizmosInSceneView("ConvertedMeshesManager", script.gizmosOfThisComponentIsDisabled);

                //Description
                GUILayout.Space(10);
                EditorGUILayout.HelpBox("This component manages the converted mesh, generated by the Skinned Mesh Converter. If you want to undo the conversion to Skinned, go to the Parent Object of this conversion.", MessageType.None);
                GUILayout.Space(10);

                //Management
                EditorGUILayout.LabelField("General Management", EditorStyles.boldLabel);
                GUILayout.Space(10);

                if (GUILayout.Button("Go To Responsible Converter GameObject", GUILayout.Height(25)))
                {
                    Selection.objects = new Object[] { script.converterOriginalGameObject };
                }

                if (GUILayout.Button("Recalculate Bounds Of This Mesh", GUILayout.Height(25)))
                {
                    script.GetComponent<SkinnedMeshRenderer>().sharedMesh.RecalculateBounds();
                }

                if (GUILayout.Button("Recalculate Normals Of This Mesh", GUILayout.Height(25)))
                {
                    script.GetComponent<SkinnedMeshRenderer>().sharedMesh.RecalculateNormals();
                }

                if (GUILayout.Button("Recalculate Tangents Of This Mesh", GUILayout.Height(25)))
                {
                    script.GetComponent<SkinnedMeshRenderer>().sharedMesh.RecalculateTangents();
                }

                if (GUILayout.Button("Optimize This Mesh", GUILayout.Height(25)))
                {
                    script.GetComponent<SkinnedMeshRenderer>().sharedMesh.Optimize();
                }
            }
        }
        #endregion
#endif
    }
}